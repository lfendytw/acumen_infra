---
- name: Ensure unzip is installed
  apt: pkg=unzip state=installed

- name: Create user for Gogs.
  user:
    name: "{{ gogs_user }}"
    comment: Gogs
    home: "{{ gogs_user_home }}"

- name: Check if Gogs is already installed.
  stat: path=/usr/local/bin/gogs
  register: gogs_bin

- name: Download Gogs.
  get_url:
    url: "{{ gogs_binary_url }}"
    dest: "{{ gogs_user_home }}/gogs.zip"
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
  when: gogs_bin.stat.islnk is not defined

- name: Expand Gogs.
  unarchive:
    src: "{{ gogs_user_home }}/gogs.zip"
    dest: "{{ gogs_user_home }}"
    group: "{{ gogs_user }}"
    owner: "{{ gogs_user }}"
    copy: no
  when: gogs_bin.stat.islnk is not defined

- include_vars: secrets.crypt
- name: Copy gogs configurations
  template:
    src: "gogs/custom/conf/app.ini.j2"
    dest: "{{ gogs_user_home }}/gogs/custom/conf/app.ini"
    group: "{{ gogs_user }}"
    owner: "{{ gogs_user }}"
  notify: restart gogs

- include: gogs-git.yml
- include: init-setup.yml

- name: Create Gogs log folder.
  file:
    path: "{{ gogs_user_home }}/gogs/log"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: Ensure Gogs is running.
  service: name=gogs state=started enabled=yes
